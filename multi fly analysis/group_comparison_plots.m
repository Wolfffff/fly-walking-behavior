%group_comparison_plots
%This script makes plots to show 17 parameters
%Need mat file generated by 'Datacollector'
clear all
close all

%type in inner_radius_bigger
IRused = 12;
%type in genotypes of flies
genotype={'WT','Orco2','IR8a1'};
%type in odor names
odor ={'ACV0'};

%how many groups?
groupNo = length(genotype)*length(odor);
%make cell array to save all the group data
groupData = cell(groupNo,1);

distData = cell(groupNo,1);
distCMdata = cell(groupNo,1);

%median of parameters, each group
param_median = zeros(17,groupNo);

groupName = cell(1,groupNo);

%save each group's data in cell array
n=0;
for i=1:length(genotype);
    for j=1:length(odor);
        n=n+1;
        mainfilename=[genotype{i} ' ' odor{j}];
        groupName{n} = mainfilename;
        datafile = [mainfilename 'data.mat'];
        load(datafile);
        groupData{n}= data;
        %get median
        param_median(:,n) = nanmedian(data,2);
        
        %distribution
        distfile = [mainfilename 'distribution.mat'];
        load(distfile)
        if size(distribution,1) == 1 %only 'during' data
            distData{n} = distribution;
        else %if 'before' and 'during' data
            distData{n} = distribution(2,:);
        end
        distCMdata{n} = Bin2Cm;
        
        
        
    end
end

%%
%plots each parameters

%parameter names
% 1. time inside
% 2. time inside/transit
% 3. redisovery time
% 4. radial density
% 5. velocity inside
% 6. velocity outside
% 7. angular velocity inside
% 8. angular velocity outside
% 9. run probability inside
% 10. run probability outside
% 11. run duration
% 12. stop duration
% 13. curved walk in
% 14. curved walk out
% 15. sharp turn at border
% 16. velocity crossing in
% 17. velocity crossing out

params = {'Ti','ti','tr','dist','vel in','vel out','ang vel in','ang vel out',...
    'run prob in','run prob out','run duration','stop duration','curved walk in',...
    'curved walk out','sharp turn','vel crossing in','vel crossing out'};


color =[1 1 1; 1 0 1; 1 0 0 ; 0 1 1];
cmap=[0.5781  0  0.8242;
    0.5451    0.5373    0.5373;
    1.0000    0.6471         0
    0         0.8078    0.8196;
    1         .02       0.2;
    0.3922    0.5843    0.9294;
    0.1961    0.8039    0.1961;
    0.9000    0.6471         0;
    0.5176    0.4392    1.0000;
    0.4196    0.5569    0.1373;
    0.7216    0.5255    0.0431;
    0.2745    0.5098    0.7059;
    0.4000    0.8039    0.6667;
    0.9333    0.7961    0.6784;
    0.6471    0.1647    0.1647;
    0         0.7490    1.0000;
    0.8588    0.4392    0.5765;
    0.5765    0.4392    0.8588;
    0.9804    0.5020    0.4471;
    0.5137    0.5451    0.5137];

figure
set(gcf,'position',[100 100 1200 800]);

%scatter plots
for i=1:length(params)
    
    subplot(5,4,i)
    for p = 1:groupNo
        temp = groupData{p}(i,:)';temp2 = p*ones(length(temp),1);
        %save temp data for statistics
        %         stat(p) = {temp};
        S =scatter(temp2,temp,10,'jitter','on', 'jitterAmount',.1);
        set(S,'MarkerEdgeColor',cmap(p,:), 'LineWidth',.7);
        hold on
        x=[p-.2 p+.2]; y = [param_median(i,p) param_median(i,p)];
        plot(x,y,'r-','linewidth',2);
    end
    
    
    xlim([.5 groupNo+0.5]);
    set(gca,'box','off','tickdir','out');
    set(gca,'Xtick',[1:groupNo],'XTickLabel',groupName,'fontsize',6);
    title(params(i));
end

%non-parametric statistical test : Wilcoxon rank sum test for
%non-Gaussian distribution of un-paired groups
% The result h = 1 indicates a rejection of the null hypothesis,
% and h = 0 indicates a failure to reject the null hypothesis at the 5% significance level.
% [p,h] = ranksum(x,y)



%shows distribution
subplot(5,4,[18 19])

for i = 1:groupNo
    %get distCMdata that does not contain NaN
    temp = distCMdata{i};
    tempNaN=isnan(temp);
    n=1;
    while sum(tempNaN(n,:)) ~= 0 %making all bin # same by adding the last two bins
        n=n+1;
    end
    
    plot(distCMdata{i}(n,:),distData{i},'color',cmap(i,:),'linewidth',2);
    hold on
end
xlim([0,3.2]);
ylim([0,0.3])
set(gca,'box','off','tickdir','out');
l=legend(groupName,'fontsize',6);
set(l,'box','off');
title('median radial distribution');

subplot(5,4,20)
for i=1:groupNo
    text(.1,1-i*.2,[groupName{i} ': n=' num2str(size(groupData{i},2))])
end

axis off


fig_name = horzcat(groupName{:});
set(gcf,'PaperPositionMode','auto');
set(gcf,'paperorientation','landscape');


print(gcf,'-dpdf','-r300',[fig_name num2str(IRused) ' 17 parameters.pdf']);
print(gcf,'-depsc2','-r300',[fig_name num2str(IRused) ' 17 parameters.eps']);


%% box plots
figure
set(gcf,'position',[100 100 1200 800]);


%boxplot
%first need to convert cell array to matrix
%boxplot(X,G) : X : data, G: group name variables

for i=1:length(params)
    
    subplot(5,4,i)
    DataMat = []; VarMat = [];
    
    for p = 1:groupNo
        temp = groupData{p}(i,:)'; temp2 = ones(length(temp),1);
        DataMat =vertcat(DataMat,temp); %concatenate all cell array data
        VarMat = vertcat(VarMat,p*temp2);
    end
    
    B = boxplot(DataMat,VarMat,'labels',groupName);hold on
    h = findobj('Tag','Box');
    set(h,'Color',[.4 .4 .4]);
    set(gca,'box','off','tickdir','out');
    
    xlim([.5 groupNo+0.5]);
    set(gca,'box','off','tickdir','out');
    set(gca,'Xtick',[1:groupNo],'XTickLabel',groupName,'fontsize',6);
    title(params(i));
end

fig_name = horzcat(groupName{:});
set(gcf,'PaperPositionMode','auto');
set(gcf,'paperorientation','landscape');


print(gcf,'-dpdf','-r300',[fig_name num2str(IRused) ' boxplots.pdf']);
print(gcf,'-depsc2','-r300',[fig_name num2str(IRused) ' boxplots.eps']);


%% distribution alone (8/19/2013)

ans = input('Do you need distribution plot alone? (1=yes, 2=no)')

if ans == 1
    figure
    
    set(gcf,'position',[400 100 groupNo*150+500 600]);
    
    subplot(2,2,1)
    i=1; %first parameter (Ti)
    
    for p = 1:groupNo
        
        mainfilename=[genotype{p} ' ' odor{p}];
        groupName{p} = mainfilename;
        
        plot(p,param_median(1,p),'k+','markersize',15);
        hold on
        temp = groupData{p}(1,:)';
        plot(p,temp,'o','color',cmap(p,:));
    end
    %predicted value from area calculation
    % predictedY = (IRused^2/3.2^2);
    % plot([0,groupNo+0.5],[predictedY predictedY],'k:');
    xlim([.5 groupNo+0.5]);
    plot([.5 groupNo+0.5],[0 0],'k:'); %marking 0
    ylim([-.4 1]);
    set(gca,'box','off','tickdir','out');
    set(gca,'YTick',[-.4:0.2:1],'Xtick',[1:groupNo],'XTickLabel',groupName,'fontsize',10);
    title(params(1));
    
    subplot(2,2,2)
    %boxplot
    %first need to convert cell array to matrix
    %boxplot(X,G) : X : data, G: group name variables
    DataMat = []; VarMat = [];
    for p = 1:groupNo
        temp = groupData{p}(1,:)'; temp2 = ones(length(temp),1);
        DataMat =vertcat(DataMat,temp); %concatenate all cell array data
        VarMat = vertcat(VarMat,p*temp2);
    end
    
    B = boxplot(DataMat,VarMat,'labels',groupName);hold on
    h = findobj('Tag','Box');
    set(h,'Color',[.4 .4 .4]);
    set(gca,'box','off','tickdir','out');
    plot([.5 groupNo+0.5],[0 0],'k:'); %marking 0
    
    ylim([-.4 1]);
    
    subplot(2,2,3)
    %jitter
    for p = 1:groupNo
        
        temp = groupData{p}(1,:)';temp2 = p*ones(length(temp),1);
        S =scatter(temp2,temp,11,'jitter','on', 'jitterAmount',.1);
        set(S,'MarkerEdgeColor',cmap(p,:), 'LineWidth',1);
        hold on
        x=[p-.2 p+.2]; y = [param_median(1,p) param_median(1,p)];
        plot(x,y,'r-','linewidth',2);
        
    end
    xlim([.5 groupNo+0.5]);
    plot([.5 groupNo+0.5],[0 0],'k:'); %marking 0
    ylim([-.4 1]);
    set(gca,'box','off','tickdir','out');
    set(gca,'YTick',[-.4:0.2:1],'Xtick',[1:groupNo],'XTickLabel',groupName,'fontsize',10);
    title(params(1));
    
    
    set(gcf,'PaperPositionMode','auto');
    set(gcf,'paperorientation','portrait');
    print(gcf,'-dpng','-r300',[fig_name num2str(IRused) ' Ti only.png']);
    print(gcf,'-depsc2','-r300',[fig_name num2str(IRused) ' Ti only.eps']);
    
end
%%
% plot multiple flies' sharp turns in radial axis together
% by SJ (5/30/2014)

% it requires 'radialturn' mat file from
% multiple_flies_analysis_V22_VB_combined.m
% and DataCollector_V2.m

%to avoid errors, only run this part when it is needed. Old datafile from
%V22 won't have this info.
ans = input('Do you want to create Sharp turns along the radial axis plot? (1 = yes/2 = no)')


if ans == 1
    n=0;
    for i=1:length(genotype);
        for j=1:length(odor);
            n=n+1;
            mainfilename=[genotype{i} ' ' odor{j}];
            groupName{n} = mainfilename;
            datafile = [mainfilename 'data.mat'];
            load(datafile);
            groupTurnData{n}= turn_data.during; %'during' data only
            NumRings = size(turn_data.during,2);
            meanTurnData(n,:) = nanmean(turn_data.during);
            %fly #
            flyNo(n) = size(groupData{n},2);
            SEMTurnData(n,:) = nanstd(turn_data.during)./sqrt(flyNo(n));
            ring_outer_radius_rings = turn_data.rings;
            
        end
    end
    
   
    figure
    
    set(gcf,'position',[400 100 groupNo*150+500 600]);
    
    
    for n=1:groupNo
        plot(meanTurnData(n,:),'o-','color',cmap(n,:),'linewidth',2);
        hold on
        errorbar(meanTurnData(n,:),SEMTurnData(n,:),'color',cmap(n,:));
    end
    
    
    xlim([0.5 5.5]);
    ylim([0 10]);
    set(gca,'ytick',(0:100),'box','off','xtick',[1:5],'xticklabel',ring_outer_radius_rings, 'tickdir','out');
    xlabel('radius of outer ring');
    ylabel('total sharp turns');
    
    title({'Mean of sharp turn frequency'; 'in Before and During periods'});
    
    set(gcf,'PaperPositionMode','auto');
    print(gcf,'-dpng','-r300',[fig_name num2str(IRused) ' sharpTurns.png']);
    print(gcf,'-depsc2','-r300',[fig_name num2str(IRused) ' sharpTurns.eps']);
    
end
